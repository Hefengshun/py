def show( a , b , c ) :  # 这里的是形参
    global f  # 用global  声明的变量就变成了全局变量
    f = 100
    print( a )  # 12
    print( b )  # 24
    a += 100
    b += 200
    c.append( 1 )
    print( a )  # 100
    print( b )  # 200


a = 12
b = 24
c = [ 1 , 2 , 3 ]
show( a , b , c )  # 这里是实参
print( a , b , c )  # 12 24 [1, 2, 3, 1]  c被修改了c是可变对象
print( f )  # 100

# def s( a , b=10 ) :  当不给第二个参数传参时就用默认值10
# print( a , b )

# s( 12 )  # 12 10
# s( 12 , 20 ) # 12 20


# def j( *a ) :  # 按顺序传参  可变位置参数  生成的都是元组
#     print( a )
#
#
# j( 1 )  # (1,)
# j( 1 , 2 )  # (1, 2)
# j( 1 , 23 , 3435 , 3 )  # (1, 23, 3435, 3)

# 当参数以键值对出现就要用  可变关键字传参
# def h( **a ) :  # 按顺序传参  可变关键字参数  生成的都是字典
#     print( a )
#
#
# h( a=1 )  # {'a': 1}
# h( a=1 , b=2 )  # {'a': 1, 'b': 2}


# 1.可变位置参数 2.可变关键字参数  一个函数里两个都存在时，1在前2在后
# 既有可变位置  又有关键字时 两个都用
# def r( *a , **b ) :
#     pass
